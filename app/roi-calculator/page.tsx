"use client"
import React from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Slider } from "@/components/ui/slider"
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion"
import Link from "next/link"
import { Calculator, Mail, Printer, Calendar, ArrowLeft, BarChart3 } from "lucide-react"

export default function ROICalculatorPage() {
  const [purchasePrice, setPurchasePrice] = React.useState([700000])
  const [renovationCosts, setRenovationCosts] = React.useState(70000)
  const [monthlyRent, setMonthlyRent] = React.useState(7700)
  const [holdPeriod, setHoldPeriod] = React.useState([6])
  const [manualRenovation, setManualRenovation] = React.useState(false)
  const [manualRent, setManualRent] = React.useState(false)

  // Auto-calculate renovation costs (10% of purchase price)
  React.useEffect(() => {
    if (!manualRenovation) {
      setRenovationCosts(Math.round(purchasePrice[0] * 0.1))
    }
  }, [purchasePrice, manualRenovation])

  // Auto-calculate monthly rent (1% of total investment)
  React.useEffect(() => {
    if (!manualRent) {
      const totalInvestment = purchasePrice[0] + renovationCosts
      setMonthlyRent(Math.round(totalInvestment * 0.01))
    }
  }, [purchasePrice, renovationCosts, manualRent])

  // Calculations
  const acquisitionFee = Math.round(purchasePrice[0] * 0.025)
  const constructionFee = Math.round(renovationCosts * 0.12)
  const totalInvestment = purchasePrice[0] + renovationCosts + acquisitionFee + constructionFee

  const annualRent = monthlyRent * 12
  const annualExpenses = Math.round(annualRent * 0.35)
  const annualManagementFee = Math.round(monthlyRent * 12 * 0.08)
  const annualCashFlow = annualRent - annualExpenses - annualManagementFee

  const appreciationRate = 0.035
  const salePrice = Math.round(purchasePrice[0] * Math.pow(1 + appreciationRate, holdPeriod[0]))
  const saleFee = Math.round(salePrice * 0.025)
  const netSaleProceeds = salePrice - saleFee

  const totalCashFlow = annualCashFlow * holdPeriod[0]
  const totalAppreciation = netSaleProceeds - purchasePrice[0]
  const totalManagementFees = annualManagementFee * holdPeriod[0]
  const totalFees = acquisitionFee + constructionFee + totalManagementFees + saleFee

  const totalProfit = totalCashFlow + totalAppreciation
  const totalROI = (totalProfit / totalInvestment) * 100
  const annualizedReturn = totalROI / holdPeriod[0]

  const formatCurrency = (amount: number) => {
    return new Intl.NumberFormat("en-US", {
      style: "currency",
      currency: "USD",
      minimumFractionDigits: 0,
      maximumFractionDigits: 0,
    }).format(amount)
  }

  const formatPercentage = (percent: number) => {
    return `${percent.toFixed(1)}%`
  }

  const handlePrint = () => {
    window.print()
  }

  const handleEmail = () => {
    const subject = "Investment Property ROI Calculator Results"
    const body = `
Investment Property ROI Calculator Results

Purchase Price: ${formatCurrency(purchasePrice[0])}
Renovation Costs: ${formatCurrency(renovationCosts)}
Monthly Rent: ${formatCurrency(monthlyRent)}
Hold Period: ${holdPeriod[0]} years

RESULTS:
Total Investment Required: ${formatCurrency(totalInvestment)}
Projected Annual Cash Flow: ${formatCurrency(annualCashFlow)}
Estimated Sale Price: ${formatCurrency(salePrice)}
Total ROI: ${formatPercentage(totalROI)}
Annualized Return: ${formatPercentage(annualizedReturn)}
Our Total Fees: ${formatCurrency(totalFees)}

Generated by Conine Coastal Investment Property ROI Calculator
Contact us at (555) 123-4567 for a consultation.
    `
    window.location.href = `mailto:?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`
  }

  return (
    <div className="min-h-screen bg-white">
      {/* Hero Section */}
      <section className="bg-gradient-to-r from-[#18457C] to-[#229FD9] py-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center text-white">
            <Link
              href="/investor-services"
              className="inline-flex items-center text-white/80 hover:text-white mb-6 transition-colors"
            >
              <ArrowLeft className="h-4 w-4 mr-2" />
              Back to Investor Services
            </Link>

            <div className="w-20 h-20 bg-white/10 rounded-full flex items-center justify-center mx-auto mb-6">
              <Calculator className="h-10 w-10 text-white" />
            </div>

            <h1 className="text-4xl lg:text-5xl font-bold mb-4" style={{ fontFamily: "serif" }}>
              Calculate Your Rental Property Investment Returns
            </h1>
            <p className="text-xl lg:text-2xl mb-6 text-white/90 max-w-4xl mx-auto">
              See potential profits from Northeast Florida rental properties with our interactive calculator
            </p>
            <p className="text-lg text-white/80 max-w-3xl mx-auto leading-relaxed">
              Use our calculator to estimate returns on rental property investments in the Jacksonville, St. Augustine,
              and Ponte Vedra areas. Based on current market data and our 20 years of local experience.
            </p>
          </div>
        </div>
      </section>

      {/* ROI Calculator */}
      <section className="py-16 bg-gray-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid lg:grid-cols-2 gap-12">
            {/* Input Controls */}
            <Card className="h-fit">
              <CardHeader>
                <CardTitle className="text-2xl text-[#18457C]" style={{ fontFamily: "serif" }}>
                  Investment Parameters
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-8">
                {/* Purchase Price */}
                <div>
                  <div className="flex justify-between items-center mb-4">
                    <label className="text-lg font-semibold text-[#18457C]">Purchase Price</label>
                    <div className="text-2xl font-bold text-[#229FD9]">{formatCurrency(purchasePrice[0])}</div>
                  </div>
                  <Slider
                    value={purchasePrice}
                    onValueChange={setPurchasePrice}
                    max={2000000}
                    min={300000}
                    step={25000}
                    className="mb-4"
                  />
                  <div className="flex justify-between text-sm text-gray-600">
                    <span>$300,000</span>
                    <span>$2,000,000</span>
                  </div>
                </div>

                {/* Renovation Costs */}
                <div>
                  <div className="flex justify-between items-center mb-4">
                    <label className="text-lg font-semibold text-[#18457C]">Renovation Costs</label>
                    <div className="text-right">
                      <div className="text-2xl font-bold text-[#F16622]">{formatCurrency(renovationCosts)}</div>
                      <div className="text-sm text-gray-600">
                        {((renovationCosts / purchasePrice[0]) * 100).toFixed(1)}% of purchase price
                      </div>
                    </div>
                  </div>
                  <div className="flex gap-4 items-center mb-2">
                    <Input
                      type="number"
                      value={renovationCosts}
                      onChange={(e) => {
                        setRenovationCosts(Number(e.target.value))
                        setManualRenovation(true)
                      }}
                      min={5000}
                      max={300000}
                      className="flex-1"
                    />
                    <Button
                      variant="outline"
                      size="sm"
                      onClick={() => {
                        setManualRenovation(false)
                        setRenovationCosts(Math.round(purchasePrice[0] * 0.1))
                      }}
                      className="whitespace-nowrap"
                    >
                      Auto (10%)
                    </Button>
                  </div>
                  <p className="text-sm text-gray-600">Range: $5,000 - $300,000</p>
                </div>

                {/* Monthly Rent */}
                <div>
                  <div className="flex justify-between items-center mb-4">
                    <label className="text-lg font-semibold text-[#18457C]">Expected Monthly Rent</label>
                    <div className="text-right">
                      <div className="text-2xl font-bold text-[#FFCA05]">{formatCurrency(monthlyRent)}</div>
                      <div className="text-sm text-gray-600">
                        {((monthlyRent / (purchasePrice[0] + renovationCosts)) * 100).toFixed(2)}% of total investment
                      </div>
                    </div>
                  </div>
                  <div className="flex gap-4 items-center mb-2">
                    <Input
                      type="number"
                      value={monthlyRent}
                      onChange={(e) => {
                        setMonthlyRent(Number(e.target.value))
                        setManualRent(true)
                      }}
                      min={1500}
                      max={15000}
                      className="flex-1"
                    />
                    <Button
                      variant="outline"
                      size="sm"
                      onClick={() => {
                        setManualRent(false)
                        const totalInvestment = purchasePrice[0] + renovationCosts
                        setMonthlyRent(Math.round(totalInvestment * 0.01))
                      }}
                      className="whitespace-nowrap"
                    >
                      Auto (1%)
                    </Button>
                  </div>
                  <p className="text-sm text-gray-600">Range: $1,500 - $15,000</p>
                </div>

                {/* Hold Period */}
                <div>
                  <div className="flex justify-between items-center mb-4">
                    <label className="text-lg font-semibold text-[#18457C]">Hold Period</label>
                    <div className="text-2xl font-bold text-[#18457C]">
                      {holdPeriod[0]} {holdPeriod[0] === 1 ? "year" : "years"}
                    </div>
                  </div>
                  <Slider value={holdPeriod} onValueChange={setHoldPeriod} max={15} min={1} step={1} className="mb-4" />
                  <div className="flex justify-between text-sm text-gray-600">
                    <span>1 year</span>
                    <span>15 years</span>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Results Panel */}
            <Card className="h-fit">
              <CardHeader>
                <CardTitle className="text-2xl text-[#18457C]" style={{ fontFamily: "serif" }}>
                  Investment Returns Analysis
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-6">
                {/* Key Metrics */}
                <div className="grid grid-cols-2 gap-4">
                  <div className="bg-[#229FD9]/5 p-4 rounded-lg">
                    <div className="text-sm text-gray-600 mb-1">Total Investment Required</div>
                    <div className="text-2xl font-bold text-[#229FD9]">{formatCurrency(totalInvestment)}</div>
                  </div>
                  <div className="bg-[#F16622]/5 p-4 rounded-lg">
                    <div className="text-sm text-gray-600 mb-1">Annual Cash Flow</div>
                    <div className={`text-2xl font-bold ${annualCashFlow >= 0 ? "text-green-600" : "text-red-600"}`}>
                      {formatCurrency(annualCashFlow)}
                    </div>
                  </div>
                  <div className="bg-[#FFCA05]/5 p-4 rounded-lg">
                    <div className="text-sm text-gray-600 mb-1">Estimated Sale Price</div>
                    <div className="text-2xl font-bold text-[#FFCA05]">{formatCurrency(salePrice)}</div>
                  </div>
                  <div className="bg-[#18457C]/5 p-4 rounded-lg">
                    <div className="text-sm text-gray-600 mb-1">Total ROI</div>
                    <div className={`text-2xl font-bold ${totalROI >= 0 ? "text-green-600" : "text-red-600"}`}>
                      {formatPercentage(totalROI)}
                    </div>
                  </div>
                </div>

                {/* Detailed Breakdown */}
                <div className="border-t pt-6">
                  <h3 className="text-lg font-semibold text-[#18457C] mb-4">Detailed Analysis</h3>
                  <div className="space-y-3">
                    <div className="flex justify-between">
                      <span className="text-gray-600">Annualized Return</span>
                      <span className={`font-semibold ${annualizedReturn >= 0 ? "text-green-600" : "text-red-600"}`}>
                        {formatPercentage(annualizedReturn)}
                      </span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-gray-600">Total Cash Flow ({holdPeriod[0]} years)</span>
                      <span className={`font-semibold ${totalCashFlow >= 0 ? "text-green-600" : "text-red-600"}`}>
                        {formatCurrency(totalCashFlow)}
                      </span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-gray-600">Total Appreciation</span>
                      <span className="font-semibold text-green-600">{formatCurrency(totalAppreciation)}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-gray-600">Our Total Fees</span>
                      <span className="font-semibold text-[#F16622]">{formatCurrency(totalFees)}</span>
                    </div>
                  </div>
                </div>

                {/* Fee Breakdown */}
                <div className="bg-gray-50 p-4 rounded-lg">
                  <h4 className="font-semibold text-[#18457C] mb-3">Fee Breakdown</h4>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span>Acquisition Fee (2.5%)</span>
                      <span>{formatCurrency(acquisitionFee)}</span>
                    </div>
                    <div className="flex justify-between">
                      <span>Construction Management (12%)</span>
                      <span>{formatCurrency(constructionFee)}</span>
                    </div>
                    <div className="flex justify-between">
                      <span>Property Management (8% annually)</span>
                      <span>{formatCurrency(totalManagementFees)}</span>
                    </div>
                    <div className="flex justify-between">
                      <span>Sale Fee (2.5%)</span>
                      <span>{formatCurrency(saleFee)}</span>
                    </div>
                  </div>
                </div>

                {/* Action Buttons */}
                <div className="flex flex-col sm:flex-row gap-3 pt-4">
                  <Button onClick={handlePrint} variant="outline" className="flex-1 bg-transparent">
                    <Printer className="h-4 w-4 mr-2" />
                    Print Results
                  </Button>
                  <Button onClick={handleEmail} variant="outline" className="flex-1 bg-transparent">
                    <Mail className="h-4 w-4 mr-2" />
                    Email Results
                  </Button>
                </div>

                <Button
                  size="lg"
                  className="w-full bg-[#F16622] hover:bg-[#F16622]/90 text-white py-4 text-lg font-semibold"
                >
                  <Calendar className="h-5 w-5 mr-2" />
                  Schedule Consultation
                </Button>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Supporting Content */}
      <section className="py-16 bg-white">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
          <Accordion type="single" collapsible className="space-y-4">
            <AccordionItem value="methodology" className="border rounded-lg px-6">
              <AccordionTrigger className="text-lg font-semibold text-[#18457C]">
                How We Calculate Returns
              </AccordionTrigger>
              <AccordionContent className="text-gray-700 space-y-4">
                <div>
                  <h4 className="font-semibold mb-2">Cash Flow Calculation:</h4>
                  <ul className="space-y-1 ml-4">
                    <li>• Annual Rent Income = Monthly Rent × 12</li>
                    <li>• Annual Expenses = 35% of gross rental income (taxes, insurance, maintenance, vacancy)</li>
                    <li>• Property Management Fee = 8% of annual rent</li>
                    <li>• Annual Cash Flow = Annual Rent - Expenses - Management Fee</li>
                  </ul>
                </div>
                <div>
                  <h4 className="font-semibold mb-2">Appreciation Calculation:</h4>
                  <ul className="space-y-1 ml-4">
                    <li>• Annual appreciation rate: 3.5% (based on Northeast Florida historical averages)</li>
                    <li>• Sale Price = Purchase Price × (1.035)^Hold Period</li>
                    <li>• Net Sale Proceeds = Sale Price - Sale Fee (2.5%)</li>
                  </ul>
                </div>
                <div>
                  <h4 className="font-semibold mb-2">ROI Calculation:</h4>
                  <ul className="space-y-1 ml-4">
                    <li>• Total Profit = Total Cash Flow + Net Appreciation</li>
                    <li>• Total ROI = (Total Profit ÷ Total Investment) × 100</li>
                    <li>• Annualized Return = Total ROI ÷ Hold Period</li>
                  </ul>
                </div>
              </AccordionContent>
            </AccordionItem>

            <AccordionItem value="assumptions" className="border rounded-lg px-6">
              <AccordionTrigger className="text-lg font-semibold text-[#18457C]">
                Northeast Florida Market Assumptions
              </AccordionTrigger>
              <AccordionContent className="text-gray-700 space-y-4">
                <div className="grid md:grid-cols-2 gap-6">
                  <div>
                    <h4 className="font-semibold mb-2">Market Data Sources:</h4>
                    <ul className="space-y-1 ml-4">
                      <li>• Jacksonville MLS historical data</li>
                      <li>• St. Johns County property records</li>
                      <li>• Duval County tax assessor data</li>
                      <li>• Local rental market surveys</li>
                    </ul>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2">Key Assumptions:</h4>
                    <ul className="space-y-1 ml-4">
                      <li>• 3.5% annual appreciation</li>
                      <li>• 5% vacancy rate</li>
                      <li>• 30% expense ratio (excluding management)</li>
                      <li>• Cash purchase (no financing)</li>
                    </ul>
                  </div>
                </div>
              </AccordionContent>
            </AccordionItem>
          </Accordion>

          {/* Testimonial */}
          <Card className="mt-12 bg-gradient-to-r from-[#18457C]/5 to-[#229FD9]/5">
            <CardContent className="p-8">
              <div className="text-center">
                <div className="w-16 h-16 bg-[#229FD9] rounded-full flex items-center justify-center mx-auto mb-4">
                  <BarChart3 className="h-8 w-8 text-white" />
                </div>
                <blockquote className="text-lg italic text-gray-700 mb-4">
                  "David's team helped us acquire and renovate three rental properties over two years. The ROI
                  calculator was spot-on with our actual returns - we're averaging 14% annually across our portfolio.
                  Their construction expertise saved us thousands in renovation costs."
                </blockquote>
                <cite className="text-[#18457C] font-semibold">- Sarah & Mike Johnson, Real Estate Investors</cite>
              </div>
            </CardContent>
          </Card>

          {/* Back to Services */}
          <div className="text-center mt-12">
            <Link href="/investor-services">
              <Button
                size="lg"
                variant="outline"
                className="text-[#18457C] border-[#18457C] hover:bg-[#18457C] hover:text-white bg-transparent"
              >
                <ArrowLeft className="h-4 w-4 mr-2" />
                Back to Investor Services
              </Button>
            </Link>
          </div>
        </div>
      </section>

      {/* Disclaimer */}
      <section className="py-12 bg-gray-100">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="bg-white p-6 rounded-lg border-l-4 border-[#F16622]">
            <h3 className="text-lg font-semibold text-[#18457C] mb-3">Important Disclaimer</h3>
            <p className="text-sm text-gray-700 leading-relaxed">
              Estimates based on Northeast Florida market averages. Actual results may vary depending on purchase price,
              loan agreements, and other market conditions. This calculator assumes cash purchases and does not include
              financing costs. Property values, rental rates, and expenses can fluctuate based on market conditions,
              property condition, location, and management efficiency. Conine Coastal provides these estimates for
              informational purposes only and recommends consulting with financial and tax professionals before making
              investment decisions.
            </p>
          </div>
        </div>
      </section>
    </div>
  )
}
